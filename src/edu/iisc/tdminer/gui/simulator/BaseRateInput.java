/*
 * BaseRateInput.java
 *
 * Created on October 24, 2008, 8:32 AM
 */

package edu.iisc.tdminer.gui.simulator;

import edu.iisc.tdminer.gui.AddEpisodePanel;
import edu.iisc.tdminercore.data.EventFactor;
import java.awt.Frame;
import java.util.HashMap;
import java.util.prefs.Preferences;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author  debprakash
 */
public class BaseRateInput extends javax.swing.JDialog {
    private final static Preferences prefs = Preferences.userNodeForPackage( AddEpisodePanel.class );

    private HashMap<Integer,Double> rates;
    private EventFactor eventTypes;
    
    /** Creates new form BaseRateInput */
    private BaseRateInput(java.awt.Frame parent, EventFactor eventTypes, HashMap<Integer,Double> rates) {
        super(parent, true);
        initComponents();
        this.setTitle("Enter base firing rates");
        this.rates = rates;
        this.eventTypes = eventTypes;
        jTextAreaInput.setText(prefs.get("firing-rates",""));
    }
    
    public static void setBaseFiringRates(EventFactor eventTypes, Frame frame, 
            HashMap<Integer,Double> rates)
            throws Exception    
    {
        BaseRateInput dialog = new BaseRateInput(frame, eventTypes, rates);
        dialog.setSize(250, 300);

        if (frame != null)
        {
            int x = (int) (frame.getLocation().getX() + (frame.getSize().getWidth() - dialog.getSize().getWidth()) / 2);
            int y = (int) (frame.getLocation().getY() + (frame.getSize().getHeight() - dialog.getSize().getHeight()) / 2);
            dialog.setLocation(x, y);
        }
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInput = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextAreaInput.setColumns(20);
        jTextAreaInput.setRows(5);
        jScrollPane1.setViewportView(jTextAreaInput);

        jLabel1.setText("Enter base firing rates: [E.g. A = 20.0]");

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    rates.clear();
    String[] lines = jTextAreaInput.getText().split("\n");
    for(String line : lines)
    {
        line = line.trim();
        if (line.length() < 1) continue;
        
        String[] parts = line.split("\\s*=\\s*");
        if (parts.length != 2)
        {
            JOptionPane.showMessageDialog(this, "Base firing rates must of the form A = 20.0", 
                    "Error parsing firing rates", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        int index = eventTypes.getId(parts[0]);
        if (index == -1)
        {
            JOptionPane.showMessageDialog(this, "Event type " + parts[0] + " is not in the set of event types", 
                    "Error parsing firing rates", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        try
        {
            double r = Double.parseDouble(parts[1]);
            rates.put(index, r);
            System.out.println("Added " + index + " : " + r);
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Unable to parse " + parts[1] + " to double", 
                    "Error parsing firing rates", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
    }
    prefs.put("firing-rates", jTextAreaInput.getText());
    this.setVisible(false);
    this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaInput;
    // End of variables declaration//GEN-END:variables
}
