/*
 * EpisodeCountRangeDialog.java
 *
 * Created on January 9, 2007, 10:45 AM
 */

package edu.iisc.tdminer.gui;

import edu.iisc.tdminercore.data.Episode;
import edu.iisc.tdminercore.data.EpisodeInstanceSet;
import edu.iisc.tdminercore.data.IEpisode;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author phreed@gmail.com
 */
public class EpisodeCountRangeDialog extends javax.swing.JDialog
{
    private EpisodeInstanceSet episodes;
    
    /**
     * Creates new form EpisodeCountRangeDialog
     * @param frame the parent frame that this dialog appears in.
     * @param model specifies whether this dialog blocks its parent (modal) or not (non-modal)
     * @param episodes the episode instances found.
     */
    public EpisodeCountRangeDialog(java.awt.Frame frame, boolean modal, EpisodeInstanceSet episodes)
    {
        super(frame, modal);
        this.episodes = episodes;
        initComponents();
        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        setSize(600,400);
        if (frame != null)
        {
            int x = (int)(frame.getLocation().getX() + (frame.getSize().getWidth() - getSize().getWidth())/2);
            int y = (int)(frame.getLocation().getY() + (frame.getSize().getHeight() - getSize().getHeight())/2);
            setLocation(x,y);
        }
    }
    
    /**
     * Collect the time frame info.
     * When there is any problem converting the fields into numbers 
     * infinity is used.
     */
    private double[] getTimeFrameChoice()
    {
        double[] range = new double[2];
        String startText = jTextFieldStartTime.getText();
        try {
            range[0] = Double.parseDouble(startText);
        }
        catch (NumberFormatException ex) {
            System.out.println("Lower bound not a real number");
            range[0] = Double.NEGATIVE_INFINITY;
            jTextFieldStartTime.setText("-Infinity " + startText);
        }
        String stopText = jTextFieldStopTime.getText();
        try {
            range[1] = Double.parseDouble(stopText);
        }
        catch (NumberFormatException ex) {
            System.out.println("Upper bound not a real number");
            range[1] = Double.POSITIVE_INFINITY;
            jTextFieldStopTime.setText("+Infinity " + stopText);
        }
        return range;
    }
    
    private double getSliceSize()
    {
        String value = this.jTextFieldBinCount.getText();
        try {
            double sliceSize = Double.parseDouble(value);
            return sliceSize;
        }
        catch (NumberFormatException ex) {
            System.out.println("Lower bound not a real number");
            jTextFieldStartTime.setText("10");
            return 10;
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupScopeMode = new javax.swing.ButtonGroup();
        jPanelTimeFrame = new javax.swing.JPanel();
        jLabelStartTime = new javax.swing.JLabel();
        jTextFieldStartTime = new javax.swing.JTextField();
        jLabelStopTime = new javax.swing.JLabel();
        jTextFieldStopTime = new javax.swing.JTextField();
        jLabelBinCount = new javax.swing.JLabel();
        jTextFieldBinCount = new javax.swing.JTextField();
        jPanelAction = new javax.swing.JPanel();
        jButtonCount = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jButtonStats = new javax.swing.JButton();
        jButtonSignalRate = new javax.swing.JButton();
        jScrollPaneEpisodeCount = new javax.swing.JScrollPane();
        jTextAreaEpisodeCount = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Episode Instance Statistics");
        jPanelTimeFrame.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createTitledBorder("Select time frame bounds")));
        jLabelStartTime.setText("Start");

        jTextFieldStartTime.setName("Start");

        jLabelStopTime.setText("Stop");

        jLabelBinCount.setText("Bin Count");

        jTextFieldBinCount.setText("10");

        org.jdesktop.layout.GroupLayout jPanelTimeFrameLayout = new org.jdesktop.layout.GroupLayout(jPanelTimeFrame);
        jPanelTimeFrame.setLayout(jPanelTimeFrameLayout);
        jPanelTimeFrameLayout.setHorizontalGroup(
            jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTimeFrameLayout.createSequentialGroup()
                .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabelStartTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelStopTime))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextFieldStopTime)
                    .add(jTextFieldStartTime, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelBinCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextFieldBinCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanelTimeFrameLayout.setVerticalGroup(
            jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTimeFrameLayout.createSequentialGroup()
                .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelTimeFrameLayout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabelStartTime)
                            .add(jTextFieldStartTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabelStopTime)
                            .add(jTextFieldStopTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanelTimeFrameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelBinCount)
                        .add(jTextFieldBinCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonCount.setText("Count");
        jButtonCount.setToolTipText("Count the number of episode instances within the time frame");
        jButtonCount.setMinimumSize(new java.awt.Dimension(70, 25));
        jButtonCount.setPreferredSize(new java.awt.Dimension(70, 25));
        jButtonCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCountActionPerformed(evt);
            }
        });

        jPanelAction.add(jButtonCount);

        jButtonClose.setText("Close");
        jButtonClose.setToolTipText("Close the dialog");
        jButtonClose.setMinimumSize(new java.awt.Dimension(70, 25));
        jButtonClose.setPreferredSize(new java.awt.Dimension(70, 25));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jPanelAction.add(jButtonClose);

        jButtonStats.setText("Statistics");
        jButtonStats.setToolTipText("Get episode statistics, time frame is not used");
        jButtonStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatsActionPerformed(evt);
            }
        });

        jPanelAction.add(jButtonStats);

        jButtonSignalRate.setText("Signal Rate");
        jButtonSignalRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignalRateActionPerformed(evt);
            }
        });

        jPanelAction.add(jButtonSignalRate);

        jTextAreaEpisodeCount.setColumns(20);
        jTextAreaEpisodeCount.setRows(5);
        jScrollPaneEpisodeCount.setViewportView(jTextAreaEpisodeCount);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPaneEpisodeCount, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanelAction, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanelTimeFrame, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanelTimeFrame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelAction, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPaneEpisodeCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 214, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSignalRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignalRateActionPerformed
        Double rate = this.episodes.getMarkerRate();
        jTextAreaEpisodeCount.setLineWrap(false);
        jTextAreaEpisodeCount.setText( "Signal Events per Stream Event: " + 
                rate.toString() + "\n");
    }//GEN-LAST:event_jButtonSignalRateActionPerformed

    private void jButtonStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatsActionPerformed
        double[] range = getTimeFrameChoice();
        double sliceSize = getSliceSize();
        String[] info = this.episodes.getStatistics(range, sliceSize);
        jTextAreaEpisodeCount.setLineWrap(false);
        jTextAreaEpisodeCount.setText(""); // clear the area
        for( String astring : info ) {
            jTextAreaEpisodeCount.append(astring + "\n");
        }
    }//GEN-LAST:event_jButtonStatsActionPerformed

  
    private void jButtonCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCountActionPerformed
        double[] range = getTimeFrameChoice();
        try {
            String[] info = this.episodes.getInstanceCount(range);
            jTextAreaEpisodeCount.setLineWrap(false);
            jTextAreaEpisodeCount.setText(""); // clear the area
            for( String astring : info ) {
                jTextAreaEpisodeCount.append(astring + "\n");
            }
        }
        catch (Exception ex) {
            System.out.println("Array generation failed: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonCountActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupScopeMode;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCount;
    private javax.swing.JButton jButtonSignalRate;
    private javax.swing.JButton jButtonStats;
    private javax.swing.JLabel jLabelBinCount;
    private javax.swing.JLabel jLabelStartTime;
    private javax.swing.JLabel jLabelStopTime;
    private javax.swing.JPanel jPanelAction;
    private javax.swing.JPanel jPanelTimeFrame;
    private javax.swing.JScrollPane jScrollPaneEpisodeCount;
    private javax.swing.JTextArea jTextAreaEpisodeCount;
    private javax.swing.JTextField jTextFieldBinCount;
    private javax.swing.JTextField jTextFieldStartTime;
    private javax.swing.JTextField jTextFieldStopTime;
    // End of variables declaration//GEN-END:variables
    
}
